<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>daydayup863</title>
  
  <subtitle>人生就像一杯茶，不会苦一辈子，但总会苦一阵子。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://daydayup863.github.io/"/>
  <updated>2022-06-21T07:01:47.880Z</updated>
  <id>http://daydayup863.github.io/</id>
  
  <author>
    <name>tking</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用pg_stat_statement记录最后操作时间</title>
    <link href="http://daydayup863.github.io/pg-stat-statement/pg-stat-last-operation/%E8%AE%B0%E5%BD%95%E6%93%8D%E4%BD%9C%E6%97%B6%E9%97%B4/PostgreSQL_%E5%88%A9%E7%94%A8pg_stat_statement%E8%AE%B0%E5%BD%95%E6%9C%80%E5%90%8E%E6%93%8D%E4%BD%9C%E6%97%B6%E9%97%B4/"/>
    <id>http://daydayup863.github.io/pg-stat-statement/pg-stat-last-operation/%E8%AE%B0%E5%BD%95%E6%93%8D%E4%BD%9C%E6%97%B6%E9%97%B4/PostgreSQL_%E5%88%A9%E7%94%A8pg_stat_statement%E8%AE%B0%E5%BD%95%E6%9C%80%E5%90%8E%E6%93%8D%E4%BD%9C%E6%97%B6%E9%97%B4/</id>
    <published>2022-06-21T06:25:07.000Z</published>
    <updated>2022-06-21T07:01:47.880Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近总是看到有人需要看记录ddl相关的最后一次操作时间，于是突发奇想，没准利用pg_stat_statement，增加一个记录时间的字段没准也可满足需求。&lt;/p&gt;
    
    </summary>
    
    
      <category term="pg_stat_statement" scheme="http://daydayup863.github.io/categories/pg-stat-statement/"/>
    
      <category term="pg_stat_last_operation" scheme="http://daydayup863.github.io/categories/pg-stat-statement/pg-stat-last-operation/"/>
    
      <category term="记录操作时间" scheme="http://daydayup863.github.io/categories/pg-stat-statement/pg-stat-last-operation/%E8%AE%B0%E5%BD%95%E6%93%8D%E4%BD%9C%E6%97%B6%E9%97%B4/"/>
    
    
      <category term="pg_stat_statement" scheme="http://daydayup863.github.io/tags/pg-stat-statement/"/>
    
      <category term="pg_stat_last_operation" scheme="http://daydayup863.github.io/tags/pg-stat-last-operation/"/>
    
      <category term="记录操作时间" scheme="http://daydayup863.github.io/tags/%E8%AE%B0%E5%BD%95%E6%93%8D%E4%BD%9C%E6%97%B6%E9%97%B4/"/>
    
  </entry>
  
  <entry>
    <title>Pgbouncer 源码安装</title>
    <link href="http://daydayup863.github.io/Pgbouncer/connect-Pool/pgb/Pgbouncer_install_from_source/"/>
    <id>http://daydayup863.github.io/Pgbouncer/connect-Pool/pgb/Pgbouncer_install_from_source/</id>
    <published>2022-05-20T06:06:27.000Z</published>
    <updated>2022-05-20T12:51:45.642Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是pgbouncer&quot;&gt;&lt;a href=&quot;#什么是pgbouncer&quot; class=&quot;headerlink&quot; title=&quot;什么是pgbouncer&quot;&gt;&lt;/a&gt;什么是pgbouncer&lt;/h1&gt;&lt;p&gt;PgBouncer是PostgreSQL的数据库提供的一个轻量级连接池工具，PgBouncer在数据库和应用端建立连接，由PgBouncer处理与后端数据库连接关系。&lt;br&gt;通过对应用端的连接限流，减少对数据库的连接请求，避免恶意连接。其工作是每一个数据节点对数据的存取，pgbouncer只是提供给客户端数据节点的&lt;br&gt;分配和链接以及限制客户端连接的数量。整体上实现了对数据的负载均衡。能够缓存和PostgreSQL的连接，当有连接请求进来的时候，直接分配空闲进程，&lt;br&gt;而不需要PostgreSQL fork出新进程来建立连接，以节省创建新进程，创建连接的资源消耗。能够有效提高连接的利用率，避免过多的无效连接，导致数据库消耗资源过大，CPU占用过高。&lt;/p&gt;
&lt;p&gt;目前支持以下3中连接池模型：&lt;/p&gt;
&lt;p&gt; Session：会话级别，在session生命周期内，连接池分配给该会话一个数据库连接，断开会话后，数据库连接会放回连接池中；&lt;br&gt; Transaction：事务级别，开启一个事务，从连接池中获取一个连接，事务结束后，连接会释放到连接池中；&lt;br&gt; Statement：语句级别，执行一个SQL，开启一个连接，SQL执行完成，连接会释放到连接池中。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Pgbouncer" scheme="http://daydayup863.github.io/categories/Pgbouncer/"/>
    
      <category term="connect Pool" scheme="http://daydayup863.github.io/categories/Pgbouncer/connect-Pool/"/>
    
      <category term="pgb" scheme="http://daydayup863.github.io/categories/Pgbouncer/connect-Pool/pgb/"/>
    
    
      <category term="Pgbouncer" scheme="http://daydayup863.github.io/tags/Pgbouncer/"/>
    
      <category term="connect Pool" scheme="http://daydayup863.github.io/tags/connect-Pool/"/>
    
      <category term="pgb" scheme="http://daydayup863.github.io/tags/pgb/"/>
    
  </entry>
  
  <entry>
    <title>在PostgreSQL自定义函数中引用其它lib库中的函数</title>
    <link href="http://daydayup863.github.io/PostgreSQL/library/CREATE-EXTENSION/%E8%87%AA%E5%AE%9A%E4%B9%89EXTENSION/PostgreSQL_self_define_extesion_reference_other_library/"/>
    <id>http://daydayup863.github.io/PostgreSQL/library/CREATE-EXTENSION/%E8%87%AA%E5%AE%9A%E4%B9%89EXTENSION/PostgreSQL_self_define_extesion_reference_other_library/</id>
    <published>2022-05-17T09:24:41.000Z</published>
    <updated>2022-05-18T03:43:17.686Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今天看到pgfans上有人提了一个如下问题.&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/images/create_extension_question.png&quot; alt=&quot;pgfans上的人提的问题&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="library" scheme="http://daydayup863.github.io/categories/PostgreSQL/library/"/>
    
      <category term="CREATE EXTENSION" scheme="http://daydayup863.github.io/categories/PostgreSQL/library/CREATE-EXTENSION/"/>
    
      <category term="自定义EXTENSION" scheme="http://daydayup863.github.io/categories/PostgreSQL/library/CREATE-EXTENSION/%E8%87%AA%E5%AE%9A%E4%B9%89EXTENSION/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="library" scheme="http://daydayup863.github.io/tags/library/"/>
    
      <category term="CREATE EXTENSION" scheme="http://daydayup863.github.io/tags/CREATE-EXTENSION/"/>
    
      <category term="自定义EXTENSION" scheme="http://daydayup863.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89EXTENSION/"/>
    
  </entry>
  
  <entry>
    <title>日志中打印pgbouncer中client &lt;-&gt; server &lt;-&gt; remote server的对应关系</title>
    <link href="http://daydayup863.github.io/pgbouncer/server/client/Pgbouncer_log_client_server_remote_map/"/>
    <id>http://daydayup863.github.io/pgbouncer/server/client/Pgbouncer_log_client_server_remote_map/</id>
    <published>2022-05-12T09:34:48.000Z</published>
    <updated>2022-05-12T09:58:28.454Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;如下流程是应用通过pgbouncer连接PostgreSQL的链路，可以看到中间有三个网络层，想要对应PostgreSQL连接到应用连接并不是很容易，尤其连接断开后，查询日志更难。&lt;/p&gt;
&lt;p&gt;app -&amp;gt; pgbouncer client -&amp;gt; pgbouncer server -&amp;gt; remote PostgreSQL&lt;/p&gt;
&lt;p&gt;实时连接中可以通过client中link指向server中ptr地址完成对应关系.&lt;/p&gt;
    
    </summary>
    
    
      <category term="pgbouncer" scheme="http://daydayup863.github.io/categories/pgbouncer/"/>
    
      <category term="server" scheme="http://daydayup863.github.io/categories/pgbouncer/server/"/>
    
      <category term="client" scheme="http://daydayup863.github.io/categories/pgbouncer/server/client/"/>
    
    
      <category term="pgbouncer" scheme="http://daydayup863.github.io/tags/pgbouncer/"/>
    
      <category term="server" scheme="http://daydayup863.github.io/tags/server/"/>
    
      <category term="client" scheme="http://daydayup863.github.io/tags/client/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 15 release note</title>
    <link href="http://daydayup863.github.io/PostgreSQL-15/release-note/PostgreSQL_15_preview_release_note/"/>
    <id>http://daydayup863.github.io/PostgreSQL-15/release-note/PostgreSQL_15_preview_release_note/</id>
    <published>2022-05-12T07:41:46.000Z</published>
    <updated>2022-05-16T02:49:11.728Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;PostgreSQL最近几天应该就会出第一个beta版本了，　今天看到git上已经有了提交, 就先尝一下鲜吧，之后可能还会有变更，不过应该也不会有太大的变更了, 以下为译文.&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL 15" scheme="http://daydayup863.github.io/categories/PostgreSQL-15/"/>
    
      <category term="release note" scheme="http://daydayup863.github.io/categories/PostgreSQL-15/release-note/"/>
    
    
      <category term="release note" scheme="http://daydayup863.github.io/tags/release-note/"/>
    
      <category term="PostgreSQL 15" scheme="http://daydayup863.github.io/tags/PostgreSQL-15/"/>
    
  </entry>
  
  <entry>
    <title>Debezium from PostgreSQL to Kafka</title>
    <link href="http://daydayup863.github.io/decoderbufs/debezium/PostgreSQL/logical-decoding/PostgreSQL_Debezium_from_PostgreSQL_to_Kafka/"/>
    <id>http://daydayup863.github.io/decoderbufs/debezium/PostgreSQL/logical-decoding/PostgreSQL_Debezium_from_PostgreSQL_to_Kafka/</id>
    <published>2022-04-26T09:12:41.000Z</published>
    <updated>2022-04-26T10:16:37.927Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍使用Debezium从Postgresql解析WAL到Kafka。&lt;/p&gt;
    
    </summary>
    
    
      <category term="decoderbufs" scheme="http://daydayup863.github.io/categories/decoderbufs/"/>
    
      <category term="debezium" scheme="http://daydayup863.github.io/categories/decoderbufs/debezium/"/>
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/decoderbufs/debezium/PostgreSQL/"/>
    
      <category term="logical decoding" scheme="http://daydayup863.github.io/categories/decoderbufs/debezium/PostgreSQL/logical-decoding/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="logical decoding" scheme="http://daydayup863.github.io/tags/logical-decoding/"/>
    
      <category term="decoderbufs" scheme="http://daydayup863.github.io/tags/decoderbufs/"/>
    
      <category term="debezium" scheme="http://daydayup863.github.io/tags/debezium/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 15 preview - 你了解PostgreSQL GUC 参数吗?</title>
    <link href="http://daydayup863.github.io/PostgreSQL/PostgreSQL-15/GUC/GUC-flags/PostgreSQL_15_preview_flags_of_GUC/"/>
    <id>http://daydayup863.github.io/PostgreSQL/PostgreSQL-15/GUC/GUC-flags/PostgreSQL_15_preview_flags_of_GUC/</id>
    <published>2022-04-22T08:02:58.000Z</published>
    <updated>2022-04-22T10:00:23.052Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;开篇灵魂四问:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;你知道哪些GUC参数没有在postgresql.conf中显示吗?&lt;/li&gt;
&lt;li&gt;你知道哪些GUC参数在show all时没有显示吗?&lt;/li&gt;
&lt;li&gt;你知道哪些GUC参数在reset all时不会被重置吗?&lt;/li&gt;
&lt;li&gt;你知道哪些GUC参数会显示在EXPLAIN时吗？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;是否很熟悉的GUC参数，顷刻间也没那么熟悉了?&lt;/p&gt;
&lt;p&gt;随着 PostgreSQL 15 的开发正在进行中，越来越多的功能被提交。今天我们将看一个新功能，关于GUC的相关标志, 一个值得拥有和了解的好东西。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="PostgreSQL 15" scheme="http://daydayup863.github.io/categories/PostgreSQL/PostgreSQL-15/"/>
    
      <category term="GUC" scheme="http://daydayup863.github.io/categories/PostgreSQL/PostgreSQL-15/GUC/"/>
    
      <category term="GUC flags" scheme="http://daydayup863.github.io/categories/PostgreSQL/PostgreSQL-15/GUC/GUC-flags/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="PostgreSQL 15" scheme="http://daydayup863.github.io/tags/PostgreSQL-15/"/>
    
      <category term="GUC" scheme="http://daydayup863.github.io/tags/GUC/"/>
    
      <category term="GUC flags" scheme="http://daydayup863.github.io/tags/GUC-flags/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 15 preview - 支持MERGE语法</title>
    <link href="http://daydayup863.github.io/PostgreSQL/SQL/merge/PostgreSQL-15/PostgreSQL_15_preview_merge/"/>
    <id>http://daydayup863.github.io/PostgreSQL/SQL/merge/PostgreSQL-15/PostgreSQL_15_preview_merge/</id>
    <published>2022-04-21T03:48:12.000Z</published>
    <updated>2022-04-21T03:52:38.635Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;早上上班途中看到PostgreSQL提交日志，已经支持MERGE语法，现在就上手体验一把。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="SQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/SQL/"/>
    
      <category term="merge" scheme="http://daydayup863.github.io/categories/PostgreSQL/SQL/merge/"/>
    
      <category term="PostgreSQL 15" scheme="http://daydayup863.github.io/categories/PostgreSQL/SQL/merge/PostgreSQL-15/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="PostgreSQL 15" scheme="http://daydayup863.github.io/tags/PostgreSQL-15/"/>
    
      <category term="SQL" scheme="http://daydayup863.github.io/tags/SQL/"/>
    
      <category term="merge" scheme="http://daydayup863.github.io/tags/merge/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 15 preview - pg_waldump 支持表级别过滤</title>
    <link href="http://daydayup863.github.io/pg-waldump/PostgresQL/PostgreSQL_15_preview_pg_waldump/"/>
    <id>http://daydayup863.github.io/pg-waldump/PostgresQL/PostgreSQL_15_preview_pg_waldump/</id>
    <published>2022-03-25T08:41:10.000Z</published>
    <updated>2022-04-21T03:42:05.205Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;PostgreSQL 15 pg_waldump支持表级别的wal record内容进行赛选，可以更快的获取到我们关心的内容.&lt;/p&gt;
    
    </summary>
    
    
      <category term="pg_waldump" scheme="http://daydayup863.github.io/categories/pg-waldump/"/>
    
      <category term="PostgresQL" scheme="http://daydayup863.github.io/categories/pg-waldump/PostgresQL/"/>
    
    
      <category term="pg_waldump" scheme="http://daydayup863.github.io/tags/pg-waldump/"/>
    
      <category term="PostgresQL" scheme="http://daydayup863.github.io/tags/PostgresQL/"/>
    
  </entry>
  
  <entry>
    <title>Postgresql 15 preview - sequence 支持逻辑复制</title>
    <link href="http://daydayup863.github.io/sequence/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/PostgreSQL/PostgreSQL_15_preview_logical_repl_support_sequence/"/>
    <id>http://daydayup863.github.io/sequence/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/PostgreSQL/PostgreSQL_15_preview_logical_repl_support_sequence/</id>
    <published>2022-03-25T08:29:51.000Z</published>
    <updated>2022-03-25T08:40:56.659Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;PostgreSQL 15版本之前的逻辑复制支持表上的 delete, insert, update, truncate, 现在sequence 也支持了。看逻辑复制的DDL邮件组也十分活跃，期待在15中也得到支持。&lt;/p&gt;
    
    </summary>
    
    
      <category term="sequence" scheme="http://daydayup863.github.io/categories/sequence/"/>
    
      <category term="逻辑复制" scheme="http://daydayup863.github.io/categories/sequence/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/"/>
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/sequence/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/PostgreSQL/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="逻辑复制" scheme="http://daydayup863.github.io/tags/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/"/>
    
      <category term="sequence" scheme="http://daydayup863.github.io/tags/sequence/"/>
    
  </entry>
  
  <entry>
    <title>使用go去抓取PostgreSQL端口的SQL</title>
    <link href="http://daydayup863.github.io/PostgreSQL/gopacket/%E6%8A%93%E5%8C%85/go_%E6%8A%93%E5%8F%96PostgreSQL_Query/"/>
    <id>http://daydayup863.github.io/PostgreSQL/gopacket/%E6%8A%93%E5%8C%85/go_%E6%8A%93%E5%8F%96PostgreSQL_Query/</id>
    <published>2022-03-23T08:37:47.000Z</published>
    <updated>2022-03-23T09:23:34.455Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;之前被问到tcpdump去抓取PostgreSQL的SQL时，怎么将SQL解析成可读内容，知道有wireshark可以解析tcpdump生成的cap文件，但不知道wireshake还有针对pg协议专门的扩展, 一直也没遇到过这种需求。最近在学习go语言，于是就想到能否用go直接抓包解析呢。&lt;/p&gt;
&lt;p&gt;这篇文章就主要以获取SQL为主。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="gopacket" scheme="http://daydayup863.github.io/categories/PostgreSQL/gopacket/"/>
    
      <category term="抓包" scheme="http://daydayup863.github.io/categories/PostgreSQL/gopacket/%E6%8A%93%E5%8C%85/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="gopacket" scheme="http://daydayup863.github.io/tags/gopacket/"/>
    
      <category term="抓包" scheme="http://daydayup863.github.io/tags/%E6%8A%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 15 preview - 逻辑复制订阅端跳过lsn</title>
    <link href="http://daydayup863.github.io/PostgreSQL/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/%E8%B7%B3%E8%BF%87%E5%86%B2%E7%AA%81/%E9%80%BB%E8%BE%91%E8%A7%A3%E7%A0%81/PostgreSQL_15_preview_sub_skip/"/>
    <id>http://daydayup863.github.io/PostgreSQL/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/%E8%B7%B3%E8%BF%87%E5%86%B2%E7%AA%81/%E9%80%BB%E8%BE%91%E8%A7%A3%E7%A0%81/PostgreSQL_15_preview_sub_skip/</id>
    <published>2022-03-22T12:22:30.000Z</published>
    <updated>2022-03-22T12:29:29.233Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;之前版本的逻辑复制如果冲突，需要手动处理冲突，并且步骤较为繁琐(参考&lt;a href=&quot;https://www.modb.pro/db/48642)，v15中提供了更简便的处理方式&quot;&gt;https://www.modb.pro/db/48642)，v15中提供了更简便的处理方式&lt;/a&gt;: ALTER SUBSCRIPTION … SKIP&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="逻辑复制" scheme="http://daydayup863.github.io/categories/PostgreSQL/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/"/>
    
      <category term="跳过冲突" scheme="http://daydayup863.github.io/categories/PostgreSQL/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/%E8%B7%B3%E8%BF%87%E5%86%B2%E7%AA%81/"/>
    
      <category term="逻辑解码" scheme="http://daydayup863.github.io/categories/PostgreSQL/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/%E8%B7%B3%E8%BF%87%E5%86%B2%E7%AA%81/%E9%80%BB%E8%BE%91%E8%A7%A3%E7%A0%81/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="逻辑复制" scheme="http://daydayup863.github.io/tags/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/"/>
    
      <category term="跳过冲突" scheme="http://daydayup863.github.io/tags/%E8%B7%B3%E8%BF%87%E5%86%B2%E7%AA%81/"/>
    
      <category term="逻辑解码" scheme="http://daydayup863.github.io/tags/%E9%80%BB%E8%BE%91%E8%A7%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL逻辑架构</title>
    <link href="http://daydayup863.github.io/PostgreSQL/arch/PostgreSQL_%E9%80%BB%E8%BE%91%E6%9E%B6%E6%9E%84/"/>
    <id>http://daydayup863.github.io/PostgreSQL/arch/PostgreSQL_%E9%80%BB%E8%BE%91%E6%9E%B6%E6%9E%84/</id>
    <published>2022-03-16T12:16:28.000Z</published>
    <updated>2022-03-16T12:47:49.079Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;很久没复习，居然连PostgreSQL的五层逻辑架构都忘记了，下面就复习一下吧&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="arch" scheme="http://daydayup863.github.io/categories/PostgreSQL/arch/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="arch" scheme="http://daydayup863.github.io/tags/arch/"/>
    
  </entry>
  
  <entry>
    <title>python 生成折线图</title>
    <link href="http://daydayup863.github.io/python/pandas/%E6%8A%98%E7%BA%BF%E5%9B%BE/python3_%E6%8A%98%E7%BA%BF%E5%9B%BE/"/>
    <id>http://daydayup863.github.io/python/pandas/%E6%8A%98%E7%BA%BF%E5%9B%BE/python3_%E6%8A%98%E7%BA%BF%E5%9B%BE/</id>
    <published>2022-03-15T09:14:06.000Z</published>
    <updated>2022-03-15T09:20:08.274Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;使用python代码将csv中的数据生成折线图&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://daydayup863.github.io/categories/python/"/>
    
      <category term="pandas" scheme="http://daydayup863.github.io/categories/python/pandas/"/>
    
      <category term="折线图" scheme="http://daydayup863.github.io/categories/python/pandas/%E6%8A%98%E7%BA%BF%E5%9B%BE/"/>
    
    
      <category term="python" scheme="http://daydayup863.github.io/tags/python/"/>
    
      <category term="pandas" scheme="http://daydayup863.github.io/tags/pandas/"/>
    
      <category term="折线图" scheme="http://daydayup863.github.io/tags/%E6%8A%98%E7%BA%BF%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://daydayup863.github.io/uncategorized/hello-world/"/>
    <id>http://daydayup863.github.io/uncategorized/hello-world/</id>
    <published>2022-03-15T09:09:08.876Z</published>
    <updated>2022-03-15T09:09:08.876Z</updated>
    
    <summary type="html">
    
       
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PostgreSQL 15 preview - 订阅端新增选项disable_on_error控制是否重试订阅</title>
    <link href="http://daydayup863.github.io/PostgreSQL/logical-decoding/logical-replication/subscriptions/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/PostgreSQL_15_logical/"/>
    <id>http://daydayup863.github.io/PostgreSQL/logical-decoding/logical-replication/subscriptions/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/PostgreSQL_15_logical/</id>
    <published>2022-03-15T08:54:18.000Z</published>
    <updated>2022-03-15T08:59:51.855Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;PG15之前的版本前，逻辑复制中，如果订阅端发生唯一性约束冲突，订阅端会一直重试，PG15增加选项 disable_on_error 去控制是否重试，默认情况为false, 表示不会disable订阅。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="logical decoding" scheme="http://daydayup863.github.io/categories/PostgreSQL/logical-decoding/"/>
    
      <category term="logical replication" scheme="http://daydayup863.github.io/categories/PostgreSQL/logical-decoding/logical-replication/"/>
    
      <category term="subscriptions" scheme="http://daydayup863.github.io/categories/PostgreSQL/logical-decoding/logical-replication/subscriptions/"/>
    
      <category term="逻辑复制" scheme="http://daydayup863.github.io/categories/PostgreSQL/logical-decoding/logical-replication/subscriptions/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="logical decoding" scheme="http://daydayup863.github.io/tags/logical-decoding/"/>
    
      <category term="logical replication" scheme="http://daydayup863.github.io/tags/logical-replication/"/>
    
      <category term="subscriptions" scheme="http://daydayup863.github.io/tags/subscriptions/"/>
    
      <category term="逻辑复制" scheme="http://daydayup863.github.io/tags/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 不同版本性能基准测试对比</title>
    <link href="http://daydayup863.github.io/PostgreSQL/pgbench/PostgreSQL_%E4%B8%8D%E5%90%8C%E7%89%88%E6%9C%AC%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E5%AF%B9%E6%AF%94/"/>
    <id>http://daydayup863.github.io/PostgreSQL/pgbench/PostgreSQL_%E4%B8%8D%E5%90%8C%E7%89%88%E6%9C%AC%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E5%AF%B9%E6%AF%94/</id>
    <published>2022-03-15T07:59:06.000Z</published>
    <updated>2022-03-15T09:11:06.369Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;此次测试主要用于对比生产环境下pg14比较pg11前版本带来的性能提升。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="pgbench" scheme="http://daydayup863.github.io/categories/PostgreSQL/pgbench/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="pgbench" scheme="http://daydayup863.github.io/tags/pgbench/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 15 preview - 逻辑复制支持row filters</title>
    <link href="http://daydayup863.github.io/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/PostgreSQL/logical-replication/PostgreSQL_15_preview_row_filters/"/>
    <id>http://daydayup863.github.io/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/PostgreSQL/logical-replication/PostgreSQL_15_preview_row_filters/</id>
    <published>2022-02-22T07:17:42.000Z</published>
    <updated>2022-02-22T09:35:09.006Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;刚看到PostgreSQL15 新增加功能－Allow specifying row filters for logical replication of tables，就第一时间体验一把。之前版本的逻辑复制针对的都是整个表的复制，某些情况下，对于一个极大的表，可能只关心部分数据，这时候row filters功能就显得特别有用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="逻辑复制" scheme="http://daydayup863.github.io/categories/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/"/>
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/PostgreSQL/"/>
    
      <category term="logical replication" scheme="http://daydayup863.github.io/categories/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/PostgreSQL/logical-replication/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="logical replication" scheme="http://daydayup863.github.io/tags/logical-replication/"/>
    
      <category term="逻辑复制" scheme="http://daydayup863.github.io/tags/%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 15 preview</title>
    <link href="http://daydayup863.github.io/PostgreSQL-15/preview/PostgreSQL_15_preview/"/>
    <id>http://daydayup863.github.io/PostgreSQL-15/preview/PostgreSQL_15_preview/</id>
    <published>2022-02-22T02:47:46.000Z</published>
    <updated>2022-02-22T07:29:55.904Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;记录PostgreSQL 15中的提交日志&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL 15" scheme="http://daydayup863.github.io/categories/PostgreSQL-15/"/>
    
      <category term="preview" scheme="http://daydayup863.github.io/categories/PostgreSQL-15/preview/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="preview" scheme="http://daydayup863.github.io/tags/preview/"/>
    
      <category term="PostgreSQL 15" scheme="http://daydayup863.github.io/tags/PostgreSQL-15/"/>
    
  </entry>
  
  <entry>
    <title>各种各样的FDW</title>
    <link href="http://daydayup863.github.io/PostgreSQL/fdw/foreign-data-wapper/fdw/"/>
    <id>http://daydayup863.github.io/PostgreSQL/fdw/foreign-data-wapper/fdw/</id>
    <published>2022-02-21T08:31:55.000Z</published>
    <updated>2022-02-21T08:42:50.779Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;记录各种PostgreSQL FDW&lt;br&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="fdw" scheme="http://daydayup863.github.io/categories/PostgreSQL/fdw/"/>
    
      <category term="foreign data wapper" scheme="http://daydayup863.github.io/categories/PostgreSQL/fdw/foreign-data-wapper/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="fdw" scheme="http://daydayup863.github.io/tags/fdw/"/>
    
      <category term="foreign data wapper" scheme="http://daydayup863.github.io/tags/foreign-data-wapper/"/>
    
  </entry>
  
</feed>
